# Use R with Shiny - optimized single-stage build
FROM rocker/r-ver:4.5

# Avoid prompts and set timezone
ENV PIP_BREAK_SYSTEM_PACKAGES=1
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install system dependencies in one layer with proper cleanup
RUN apt-get update && apt-get upgrade -y && apt-get install -y --no-install-recommends \
    # Core dependencies
    libcurl4-openssl-dev \
    libssl-dev \
    libxml2-dev \
    # Spatial/GIS dependencies
    libgdal-dev \
    libproj-dev \
    gdal-bin \
    proj-bin \
    libgeos-dev \
    libspatialindex-dev \
    libudunits2-dev \
    # JavaScript and compilation tools
    libv8-dev \
    libprotobuf-dev \
    protobuf-compiler \
    libjq-dev \
    libnode-dev \
    libabsl-dev \
    cmake \
    pkg-config \
    python3-pip \
    # Utilities
    curl \
    git \
    wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && rm -rf /tmp/* \
    && rm -rf /var/tmp/*


RUN pip3 install gdal numpy

ARG REF_BRANCH
ENV REF_BRANCH=${REF_BRANCH:-master}


# Install rgdal and point it to sp.h
RUN set -e && \
    R -e "install.packages(c('remotes', 'sp'), verbose = TRUE)" && \
    R -e "sp_path <- find.package('sp')" && \
    R -e "configure_args <- paste('--with-sp-include=', file.path(find.package('sp'), 'include'), sep=''); install.packages('rgdal', configure.args = configure_args, repos = 'https://cran.r-project.org')"

# Install Oasisui with dependencies, fail build on error
RUN set -e && \
    R -e "install.packages('remotes', verbose = TRUE)" && \
    R -e "remotes::install_version('revgeo', repos = 'https://cran.r-project.org')" && \
    R -e "remotes::install_github('daattali/shinyjs', ref = '2.1.0', upgrade = 'always')" && \
    R -e "options(warn=2); remotes::install_github('OasisLMF/OasisUI', ref = '${REF_BRANCH}', subdir = 'BFE_RShiny/oasisui')" && \
    echo "Verifying oasisui package installation..." && \
    R -e "if (!require('oasisui', quietly = TRUE)) quit(status = 1, save = 'no')" && \
    rm -rf /var/lib/apt/lists/* && \
    echo "=== R packages installation complete ==="

# Create the logging directory
RUN mkdir /var/log/shiny-server

# Make root directory
RUN mkdir -p /root
WORKDIR /root

# Add shiny options upon startup
COPY shinyproxy/Rprofile.site /usr/local/lib/R/etc/

# Set port
EXPOSE 3838

# Use below for stand-alone build, i.e. without shinyproxy
# ARG API_IP_CMD_RES
# ENV API_IP=${API_IP_CMD_RES:-0.0.0.0}
# ENV API_PORT=8000
# ENV API_VERSION=v1
# ENV API_SHARE_FILEPATH=./downloads
# ENV OASIS_ENVIRONMENT=oasis_localhost
# ENV MAX_UPLOAD_SIZE=500
# ENV HIDE_FOOTER_VERSION=TRUE

# Launch Oasisui
CMD ["R", "-e", "oasisui::runOasisui()"]


