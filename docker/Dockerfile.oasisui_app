FROM rocker/r-ver:3.5.1
# -> debian stretch (9)
# -> don't use latest R release, since that will keep getting linked with later build-dates and MRAN snapshots
# -> sets repository to MRAN for specific build date of R version, being the last date CRAN distributed that R version
# -> installs R to /usr/local/lib/R

RUN apt-get update && \
    apt-get install -y --no-install-recommends libv8-3.14-dev libcairo2-dev libxt-dev libcurl4-gnutls-dev libssl-dev libssh2-1-dev libxml2-dev apt-utils libjq-dev gdal-bin proj-bin libgdal-dev libudunits2-dev && \
    # if desired, add tools such as: sudo, vim, wget, curl, procps
    # library necessary for dependency of geojsonio
    apt-get install -y libprotobuf-dev protobuf-compiler  && \
    rm -rf /var/lib/apt/lists/*

# libcairo2-dev and libxt-dev needed for Cairo, e.g. graphics
# libcurl4-openssl-dev and libcurl4-gnutls-dev are mutually exclusive. we choose GNU TLS, which seems preferred on Ubuntu / Debian systems and is recommended e.g. by RStudio
# libssl-dev depends on libssl1.1, which in turn depends on libc6
# (libcurl4-openssl-dev / openssl would depend on libc6 and libssl1.1 as well)

# Install Oasisui with dependencies
ARG REF_BRANCH
ENV REF_BRANCH=${REF_BRANCH:-master}
RUN R -e "install.packages('remotes')" && \
    # installing package shinyjs from github fixing reference to commit 473a54b
    R -e "remotes::install_github('daattali/shinyjs', ref = '473a54b', upgrade = 'always')" && \
    # dependency of htmltools:
    R -e "install.packages('base64enc')" && \
    R -e "remotes::install_github('rstudio/htmltools', ref = 'v0.5.0', dependencies = FALSE, upgrade = 'always')" && \
    R -e "remotes::install_github('ramnathv/htmlwidgets', ref = 'v1.5.2', dependencies = FALSE, upgrade = 'always')" && \
    R -e "remotes::install_github('rstudio/DT', ref = 'v0.16', dependencies = FALSE, upgrade = 'always')" && \
    R -e "remotes::install_github('OasisLMF/OasisUI', ref = '${REF_BRANCH}', subdir = 'BFE_RShiny/oasisui')" && \
    rm -rf /var/lib/apt/lists/*

# Create the logging directory
RUN mkdir /var/log/shiny-server

# Make root directory
RUN mkdir -p /root
WORKDIR /root

# Add shiny options upon startup
COPY shinyproxy/Rprofile.site /usr/local/lib/R/etc/

# Set port
EXPOSE 3838

# Use below for stand-alone build, i.e. without shinyproxy
# ARG API_IP_CMD_RES
# ENV API_IP=${API_IP_CMD_RES:-0.0.0.0}
# ENV API_PORT=8000
# ENV API_VERSION=v1
# ENV API_SHARE_FILEPATH=./downloads
# ENV OASIS_ENVIRONMENT=oasis_localhost

# Launch Oasisui
CMD ["R", "-e", "oasisui::runOasisui()"]
