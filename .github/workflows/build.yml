name: OasisUI Build

on:
  push:
  workflow_dispatch:
    inputs:
      docker_push: 
        description: 'Push the docker image to dockerhub and outout reference'
        required: false
        default: 'false'

  workflow_call:
    inputs:
      docker_push: 
        description: 'Push the docker image to dockerhub and outout reference'
        required: false
        default: 'false'
        type: string
 
#    outputs:
#      app_image_ref:
#        description:
#        value: ${{ jobs.shiny_app.outputs. ___ }}
#
#      proxy_image_ref:
#        description:
#        value: ${{ jobs.shiny_proxy.outputs. ___ }}



jobs:
  shiny_app:
    env:
      IMAGE_NAME: 'oasisui_app'
      TMP_REPO: 'coreoasis/github-actions' 
      DOCKERFILE: 'docker/Dockerfile.oasisui_app' 
    runs-on: ubuntu-latest
    outputs:
      app_image_ref: ${{ steps. ___ .outputs. ___ }}
    steps:

    - name: Dump github context
      run:   echo "$GITHUB_CONTEXT"
      shell: bash
      env:
       GITHUB_CONTEXT: ${{ toJson(github) }}

    #Clone repo 
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref_name }}

    - name: Create image tag 
      id: git_ref
      run: |
        #COMMIT=$(git rev-parse --short HEAD)
        #echo "image_tag=${{ env.IMAGE_NAME }}-$COMMIT" >> $GITHUB_OUTPUT
        echo "tag=${{ env.IMAGE_NAME }}-${{ github.sha }}" >> $GITHUB_OUTPUT

    #docker build
    - name: Docker Build 
      run: |
        docker build -f ${{ env.DOCKERFILE }} -t ${{ env.TMP_REPO }}:${{ steps.git_ref.outputs.tag }} .

    #Trivy Scan 
    - name: Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.TMP_REPO }}:${{ steps.git_ref.outputs.tag }}
        format: 'table'
        scan-type: 'image'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'
        #output: 'cve_app_image.txt' 
        #vuln-type: 'os,library'

    #Image push - temp location  

  shiny_proxy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: 'oasisui_proxy'
      TMP_REPO: 'coreoasis/github-actions' 
      DOCKERFILE: 'docker/Dockerfile.oasisui_proxy' 
    outputs:
      proxy_image_ref: ${{ steps. ___ .outputs. ___ }}
    steps:

    - name: Dump github context
      run:   echo "$GITHUB_CONTEXT"
      shell: bash
      env:
       GITHUB_CONTEXT: ${{ toJson(github) }}

    #Clone repo 
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.ref_name }}

    - name: Create image tag 
      id: git_ref
      run: |
        #COMMIT=$(git rev-parse --short HEAD)
        #echo "image_tag=${{ env.IMAGE_NAME }}-$COMMIT" >> $GITHUB_OUTPUT
        echo "tag=${{ env.IMAGE_NAME }}-${{ github.sha }}" >> $GITHUB_OUTPUT

    #docker build
    - name: Docker Build 
      run: |
        docker build -f ${{ env.DOCKERFILE }} -t ${{ env.TMP_REPO }}:${{ steps.git_ref.outputs.tag }} .

    #Trivy Scan 
    - name: Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.TMP_REPO }}:${{ steps.git_ref.outputs.tag }}
        format: 'table'
        scan-type: 'image'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'
        #output: 'cve_app_image.txt' 
        #vuln-type: 'os,library'


    #Image push - temp location  

