% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conditionalPanels.R
\name{conditionalPanels}
\alias{conditionalPanels}
\alias{conditionalPanelsUI}
\title{Reactive conditional panels}
\usage{
conditionalPanels(input, output, session, visible)

conditionalPanelsUI(id, panels)
}
\arguments{
\item{input}{Shiny input object.}

\item{output}{Shiny output object.}

\item{session}{Shiny session object.}

\item{visible}{Reactive string expression determining the visibility of
panels.}

\item{id}{Namespace ID for the module.}

\item{panels}{Named list of UI content for a set of panels. Only the panels
whose name matches the \code{visible} reactive input to the module server
function are shown.}
}
\description{
Shiny module handling the visibility of a set of panels depending on a
reactive input.
}
\details{
In comparison to \code{\link[shiny:conditionalPanel]{shiny::conditionalPanel()}}, the
\emph{conditionalPanels} module provides a convenient abstraction from the
JavaScript condition details and only relies on the reactive input
\code{visible} to determine which panels are visible.
}
\note{
The module relies on package \pkg{shinyjs}, which means
\code{\link[shinyjs:useShinyjs]{shinyjs::useShinyjs()}} must be included in the app \code{ui} definition.
}
\examples{
if (interactive()) {
  library(shiny)
  ui <- fluidPage(
    shinyjs::useShinyjs(),
    titlePanel("Reactive panel visibility via `conditionalPanels`"),
    sidebarLayout(
      sidebarPanel(
        radioButtons(
          "main_visible",
          "Active main panel",
          LETTERS[1:10]
        )
      ),
      mainPanel(
        conditionalPanelsUI(
          "main",
          c(
            mapply(SIMPLIFY = FALSE, textInput,
                   LETTERS[1:5], paste("Main Panel", LETTERS[1:5])),
            list(A = textInput("A-nother", "A-nother Main Panel"))
          )
        )
      )
    )
  )
  server <- function(input, output) {
    callModule(conditionalPanels, "main", reactive(input$main_visible))
  }
  shinyApp(ui = ui, server = server)
}
}
