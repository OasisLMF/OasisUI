% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step2_chooseModel_module.R
\name{step2_chooseModelUI}
\alias{step2_chooseModelUI}
\alias{step2_chooseModel}
\title{step2_chooseModel UI}
\usage{
step2_chooseModelUI(id)

step2_chooseModel(input, output, session, dbSettings, apiSettings,
  active = reactive(TRUE), logMessage = message,
  currstep = reactive(-1), portfolioID = reactive({     "" }),
  modelID = reactive({     "" }), pfName = reactive({     "" }),
  progStatus = reactive({     "" }))
}
\arguments{
\item{id}{module id}

\item{input}{Shiny input object.}

\item{output}{Shiny output object.}

\item{session}{Shiny session object.}

\item{dbSettings}{as returned from \link{flamingoDB}}

\item{apiSettings}{as returned from \link{flamingoServer}}

\item{active}{reactive expression whether the module state should be updated.}

\item{logMessage}{function that will be passed info messages.}

\item{currstep}{current selected step.}

\item{portfolioID}{selected programme ID.}

\item{modelID}{selected ProgOasis ID.}

\item{pfName}{Name of selected programme.}

\item{progStatus}{Status of selected programme.}

\item{id}{Namespace ID for the module.}

\item{user}{reactive expression yielding user}
}
\value{
List of tags.

The returned list also includes reactive navigation state
constructed via \code{\link[=outputNavigation]{outputNavigation()}}.

modelID Id of selected progOasis.

tbl_modelsData model association table.

newstep navigation step
}
\description{
UI/View for the step2_chooseModel.

Server logic to step2_chooseModel.
}
